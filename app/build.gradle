plugins {
    id 'com.android.application'
}
apply from : '../common.gradle'

android {

    defaultConfig {
        applicationId "com.android.demo"

        // 仅保留中文语种的资源
        resConfigs 'zh'

        // 仅保留 xxhdpi 图片资源（目前主流分辨率 1920 * 1080）
//        resConfigs 'xxhdpi'

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // 设置存放 so 文件的目录
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }



    signingConfigs {
        config {
            storeFile file('./qianfei.jks')
            storePassword 'android'
            keyAlias 'qianfeidev'
            keyPassword 'android'
        }
    }

// 构建配置：https://developer.android.google.cn/studio/build/build-variants
    buildTypes {

        debug {
            // 给包名添加后缀
            applicationIdSuffix '.debug'
            // 调试模式开关
            debuggable true
            jniDebuggable true
            // 压缩对齐开关
            zipAlignEnabled false
            // 移除无用的资源
            shrinkResources false
            // 代码混淆开关
            minifyEnabled false
            // 签名信息配置
            signingConfig signingConfigs.config
            // 添加清单占位符
            addManifestPlaceholders([
                    'app_name'    :    '@string/app_name'+' Debug 版'
            ])
            // 调试模式下只保留一种架构的 so 库，提升打包速度
            ndk {
                abiFilters 'armeabi-v7a'
            }
        }

        preview.initWith(debug)
        preview {
            applicationIdSuffix ''
            // 添加清单占位符
            addManifestPlaceholders([
                    'app_name'    :    '@string/app_name'+' Preview 版'
            ])
        }

        release {
            // 调试模式开关
            debuggable false
            jniDebuggable false
            // 压缩对齐开关
            zipAlignEnabled true
            // 移除无用的资源
            shrinkResources true
            // 代码混淆开关
            minifyEnabled true
            // 签名信息配置
            signingConfig signingConfigs.config
            // 添加清单占位符
            addManifestPlaceholders([
                    'app_name'    :    '@string/app_name'
            ])
            // 仅保留两种架构的 so 库，根据 Bugly 统计得出
            ndk {
                // armeabi：万金油架构平台（占用率：0%）
                // armeabi-v7a：曾经主流的架构平台（占用率：10%）
                // arm64-v8a：目前主流架构平台（占用率：95%）
                abiFilters 'armeabi-v7a', 'arm64-v8a'
            }

            proguardFiles getDefaultProguardFile('proguard-android.txt'),'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        // apk 输出文件名配置
        variant.outputs.all { output ->
            outputFileName = rootProject.getName() + '_v' + variant.versionName + '_' + variant.buildType.name
            if (variant.buildType.name == buildTypes.release.getName()) {
                outputFileName += '_' + new Date().format('MMdd')
            }
            outputFileName += '.apk'
        }
    }



}

dependencies {
    // 引用封装的公共基类
    implementation project(':app-common')
    implementation project(':chinesetts')
}